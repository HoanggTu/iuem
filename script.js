// T·∫≠p h·ª£p love ƒë∆∞·ª£c ch·∫°m
const loveTaps = new Set();
let userName = '';

function startApp() {
  const stageIds = ['cardStage', 'startStage', 'inputStage', 'loveStage'];
  const stages = Object.fromEntries(stageIds.map(id => [id, document.getElementById(id)]));

  if (Object.values(stages).some(stage => !stage)) {
    console.error('Thi·∫øu m·ªôt trong c√°c element stage!');
    return;
  }

  stages.startStage.style.display = 'none';
  stages.inputStage.style.display = 'block';
  stages.loveStage.style.display = 'none';
  stages.cardStage.style.display = 'none';

  document.getElementById('bgMusic')?.play().catch(err =>
    console.warn('Kh√¥ng th·ªÉ ph√°t nh·∫°c:', err)
  );

  inipesan();
}

// Hi·ªáu ·ª©ng g√µ ch·ªØ
typeWriterEffect = (text, elementId, callback) => {
  const element = document.getElementById(elementId);
  if (!element) {
    console.error(`Kh√¥ng t√¨m th·∫•y element v·ªõi ID: ${elementId}`);
    return;
  }

  let i = 0;
  const speed = 50;
  element.textContent = '';

  const type = () => {
    if (i < text.length) {
      element.textContent += text.charAt(i);
      i++;
      setTimeout(type, speed);
    } else {
      console.log('Hi·ªáu ·ª©ng g√µ ho√†n t·∫•t');
      callback?.();
    }
  };

  type();
};

function switchStage(fromId, toId, withFade = false) {
  const fromElement = document.getElementById(fromId);
  const toElement = document.getElementById(toId);

  if (!fromElement || !toElement) {
    console.error(`Kh√¥ng t√¨m th·∫•y element: ${fromId} ho·∫∑c ${toId}`);
    return;
  }

  if (withFade) {
    fromElement.classList.add('hidden');
    setTimeout(() => {
      fromElement.style.display = 'none';
      toElement.style.display = 'block';
    }, 1000);
  } else {
    fromElement.style.display = 'none';
    toElement.style.display = 'block';
  }
}
const loveText = "LOVE"
function tapLove(id) {
  if (loveTaps.has(id)) return;

  const loveIcon = document.querySelector(`#loveIcons .love-icon:nth-child(${id}) .love-letter`);
  loveIcon.classList.add('tapped');
  loveIcon.textContent = loveText[id - 1];
  loveTaps.add(id);
  console.log(`Ch·∫°m love ${id}, t·ªïng: ${loveTaps.size}`);

  if (loveTaps.size === 4) {
    Swal.fire({
      title: 'ƒê·ªß ƒëi·ªÅu ki·ªán r·ªìi n√®!',
      text: 'Xin h√£y nh·∫≠n l·ªùi ch√∫c ·∫°! üíñ',
      timer: 1500,
      showConfirmButton: false,
      background: '#fffbe7',
      customClass: { title: 'swal-title', content: 'swal-text' }
    }).then(() => {
      switchStage('loveStage', 'cardStage', true);

      const loveMsg = document.getElementById('loveMsg');
      if (!loveMsg) return console.error('Kh√¥ng t√¨m th·∫•y element loveMsg!');

      typeWriterEffect(
        // `Ch√∫c ${userName} c·ªßa anh  th·∫≠t vui v·∫ª nh∆∞ m·ªôt ƒë·ª©a tr·∫ª, nh∆∞ng ƒë∆∞·ª£c anh y√™u nh∆∞ m·ªôt n·ªØ ho√†ng üëë. D√π em c√≥ l·ªõn bao nhi√™u th√¨ trong tim anh, em v·∫´n l√† c√¥ng ch√∫a b√© b·ªèng c·∫ßn ƒë∆∞·ª£c c∆∞ng chi·ªÅu m·ªói ng√†y! üíò`,
        `Ch√∫c m·ª´ng sinh nh·∫≠t ${userName} ! Ch√∫c D√¨ ng·∫≠p tr√†n nƒÉng l∆∞·ª£ng t√≠ch c·ª±c m·ªói ng√†y. Mong tu·ªïi m·ªõi s·∫Ω mang ƒë·∫øn cho c√¥ th·∫≠t nhi·ªÅu ni·ªÅm vui, c√¥ng vi·ªác c≈©ng nh∆∞ s·ª± nghi·ªáp ph√°t tri·ªÉn h∆°n n·ªØa c√πng v·ªõi nh·ªØng k·ª∑ ni·ªám ƒë·∫πp v√† nh·ªØng ƒëi·ªÅu b·∫•t ng·ªù tuy·ªát v·ªùi
         Ch√∫c D√¨ m·ªôt ng√†y sinh nh·∫≠t th·∫≠t √Ω nghƒ©a, tr·ªçn v·∫πn v√† ƒë√°ng nh·ªõ! üéÇüíêüíñ.`,
        'loveMsg',
        () => {
          const fromTag = document.createElement("div");
          fromTag.id = 'fromTag';
          fromTag.textContent = "Ch√°u c·ªßa D√¨, T√∫";
          fromTag.style.marginTop = "20px";
          fromTag.style.opacity = "0";
          fromTag.style.transition = "opacity 1s ease";
          loveMsg.appendChild(fromTag);

          setTimeout(() => {
            fromTag.style.opacity = "1";
          }, 500);
        }
      );
    });
  }
}

async function inipesan() {
  const { value: typedName } = await Swal.fire({
    title: 'C·∫ßn ph·∫£i nh·∫≠p t√™n ƒë√≥ ·∫°!',
    input: 'text',
    inputValue: '',
    allowOutsideClick: false,
    allowEscapeKey: false,
    showConfirmButton: true,
    didOpen: () => Swal.getInput()?.focus(),
    preConfirm: () => Swal.getInput()?.value?.trim()
  });

  if (typedName) {
    userName = typedName;
    loveTaps.clear();
    document.querySelectorAll('.love-icon').forEach(icon =>
      icon.classList.remove('tapped')
    );
    switchStage('inputStage', 'loveStage');
  } else {
    await Swal.fire({
      icon: 'warning',
      title: 'N√î n√¥, kh√¥ng ƒë∆∞·ª£c b·ªè tr·ªëng!!',
      confirmButtonText: 'Nh·∫≠p l·∫°i ƒëi ·∫°'
    });
    inipesan();
  }
}
